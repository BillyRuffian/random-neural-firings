-# This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
-# calls with the actual strings ("‹ Prev", "Next ›", "…").

-# The link variable is set to a proc that returns the link tag.
-# Usage: link.call( page_number [, text [, extra_attributes_string ]])

- link = pagy_link_proc(pagy)

.pagination{"aria-label" => "pager", :role => "navigation"}

  - if pagy.prev
    .pagination-item.short!= link.call(pagy.prev, pagy_t('pagy.nav.prev'), 'aria-label="previous"')
  - else
    .pagination-item.short.disabled
      %a.disabled{ href: '#' }!= pagy_t('pagy.nav.prev')

  - pagy.series.each do |item|       # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36]
    - if item.is_a?(Integer)         # page link
      .pagination-item.short
        != link.call(item)

    - elsif item.is_a?(String)       # current page
      .pagination-item.short.selected
        %a.disabled{ href: '#' }= item

    - elsif item == :gap             # page gap
      .pagination-item.short!= pagy_t('pagy.nav.gap')

  - if pagy.next
    .pagination-item.short!= link.call(pagy.next, pagy_t('pagy.nav.next'), 'aria-label="next"')
  - else
    .pagination-item.short.disabled
      %a.disabled{ href: '#' }!= pagy_t('pagy.nav.next')